/*****************************************************
***  Class Name: BinaryTreeGUI
***  Class Author: Gabriel Winkler
******************************************************
*** Purpose of the class: This class will display the GUI for allowing the user
*** to browse for a file and see the text sorted and numbered. 
******************************************************
*** Date: October 2nd, 2017
******************************************************
*** List of changes with dates:
*** October 2nd: Create the BinaryTreeGUI class.
***               - Program the buttons to do stuff.
*** October 3rd: Re-do the browseFile button.
***               - Ask Gabe how to make the file selection screen appear.
***               - Took out the sort button.
***               - Added appropriate comments.
*******************************************************/
package WordSortAndCount;
import java.io.*;
import java.awt.event.*;
import javax.swing.JFileChooser;
/**
 *
 * @author gw009
 */
public class BinaryTreeGUI extends javax.swing.JFrame {
    static private final String NEWLINE = "\n";
    JFileChooser fc;
    private BufferedReader bReader;
    private BTree myTree;
    /**
     * Creates new form BinaryTreeGUI
     */
    public BinaryTreeGUI() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        browseFile = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("This program will take a text file and sort the words, counting the number of repeats. ");

        jLabel2.setText("To begin, choose a file to sort.");

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setEnabled(false);
        jScrollPane1.setViewportView(jTextArea1);

        browseFile.setText("Browse");
        browseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(browseFile)
                        .addComponent(jLabel2)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(browseFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void browseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseFileActionPerformed
        myTree = new BTree();
        fc = new JFileChooser();
        String allText = "";
        if (evt.getSource() == browseFile) {
            //int returnVal = fc.showOpenDialog(GUI.this);

            if (fc.showOpenDialog(BinaryTreeGUI.this) == JFileChooser.APPROVE_OPTION) {
                try
                {
                    FileReader reader = new FileReader(fc.getSelectedFile());
                    bReader = new BufferedReader(reader);
                    String nextLine = bReader.readLine();
                    
                    while(nextLine != null)
                    {
                        //allText += nextLine.replaceAll("[^a-zA-Z ]", "").replaceAll("\\s+", " ").toLowerCase();
                        allText += nextLine + " ";
                        nextLine = bReader.readLine();
                    }
                    bReader.close();
                }
                catch(IOException e)
                {
                    jTextArea1.setText("YOU MUST CONSTRUCT ADDITIONAL PYLONS.");
                }
            }
            
            
                //File file = fc.getSelectedFile();
                //This is where a real application would open the file.
              //jTextArea1.append("Opening: " + fc.getSelectedFile().getName() + "." + NEWLINE);
            } else {
                jTextArea1.append("Open command cancelled by user." + NEWLINE);
            }
            
            allText = allText.toLowerCase().trim();
            allText = allText.replaceAll("[^a-z ]", "");
            
            for(String word : allText.split(" "))
            {
                if (word.compareTo("") != 0) myTree.addNode(word);
            }
            //jTextArea1.setText(allText);
            jTextArea1.setText(myTree.printOut());
            
            //jTextArea1.setCaretPosition(jTextArea1.getDocument().getLength());
    }//GEN-LAST:event_browseFileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BinaryTreeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BinaryTreeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BinaryTreeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BinaryTreeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BinaryTreeGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseFile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
